# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # https://github.com/marktext/marktext/actions/runs/1539033367/workflow
  build-windows:
    runs-on: windows-latest
    continue-on-error: false
    timeout-minutes: 60

    env:
      # MARKTEXT_IS_STABLE: 1
      MARKTEXT_EXIT_ON_ERROR: 1
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
         repository: 'marktext/marktext' 
      
      - name: Get latest commit
        shell: pwsh
        run: |
          git log --pretty=format:"%cd|||%cn|||%s" -1 --date=unix > git-commit-info.txt

      - name: 上传git提交信息
        uses: actions/upload-artifact@v2
        with:
          path: git-commit-info.txt

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          check-latest: true
          cache: yarn
          cache-dependency-path: yarn.lock

      # Workaround: Fix native build failure due to outdated node-gyp version.
      - name: Fix node-gyp
        run: |
          npm install --global node-gyp@latest
          npm prefix -g | % {npm config set node_gyp "$_\node_modules\node-gyp\bin\node-gyp.js"}
          node-gyp install
        shell: pwsh

      - name: Cache node_modules
        uses: actions/cache@v2
        id: cacheNodeModules
        with:
          path: ${{ github.workspace }}\node_modules
          key: ${{ runner.os }}-node_modules-cache-${{ hashFiles(format('{0}{1}', github.workspace, '\yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-node_modules-cache-
      - name: Cache Electron
        uses: actions/cache@v2
        with:
          path: ${{ env.LOCALAPPDATA }}\electron\Cache
          key: ${{ runner.os }}-electron-cache-${{ hashFiles(format('{0}{1}', github.workspace, '\yarn.lock')) }}

      - name: Cache Electron-Builder
        uses: actions/cache@v2
        with:
          path: ${{ env.LOCALAPPDATA }}\electron-builder\cache
          key: ${{ runner.os }}-electron-builder-cache-${{ hashFiles(format('{0}{1}', github.workspace, '\yarn.lock')) }}

      - name: Install dependencies
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        run: yarn install --check-files --frozen-lockfile

      - name: Build
        run: yarn build:bin

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: exe-file
          path: |
            build/**/*.exe
  parse-artifacts:
    runs-on: alpine-latest
    needs: build-windows
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: git-commit-info.txt
      - run: |
           log=$(cat git-commit-info.txt)
           timestamp=$(echo $log | grep -o '^[0-9]\+')
           dateTime=$(date --date="@$timestamp" +"%Y-%m-%d_%H%M%S")
           echo "GIT_COMMIT_DATE_TIME=$dateTime" >> $GITHUB_ENV
           echo "GIT_COMMIT_INFO=$log" >> $GITHUB_ENV
      - name: 上传说明文件
        uses: actions/upload-artifact@v2
        with:
          name: 文件版本：${{ env.GIT_COMMIT_DATE_TIME }} ${{ env.GIT_COMMIT_INFO }}
          path: git-commit-info.txt
